/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Opciones;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import proyectoumnsh.Menu;

/**
 *
 * @author RONALDO
 */
public class Consultar extends javax.swing.JFrame {
    private Connection conexion=null; //variable que llevará a cabo la conexión a la B.D.
    private ResultSet consulta; //variable que guardará el resultado de la consulta
    private PreparedStatement pst; //variable que ejecutará las sentencias a la B.D.
    private DefaultTableModel modelo = new DefaultTableModel();
    //objeto que almacenará tanto la información como la estructura de la tabla
    private boolean bandera=true;
    //variable que identificará cuando dar de alta o modificar un registro
    String saldo;
    /**
     * Creates new form Consultar
     */
    public Consultar() {
        initComponents();
        
        jTxtNombre.setEnabled(false);
        jTxtId.setEnabled(false);
        jTxtApellidoPaterno.setEnabled(false);
        try //manejo de interrupciones
        {
            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
            //se registra el controlador de MySql
            conexion=DriverManager.getConnection("jdbc:mysql://auth-db628.hostinger.com/u523670221_Banco", "u523670221_general", "AGTT.MbdD3bpJ#d");
            //se realiza la conexion mediante la dirección URL, integrada por el tipo de 
            //controlador, la ubicación de la B.D., el usuario y la contraseña para ingresar
        }
        catch(SQLException e) //si existe algún error, esta parte lo captura y administra
        {
            JOptionPane.showMessageDialog(null, e.toString());//se muestra el error generado 
        }
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBtgConsultar = new javax.swing.ButtonGroup();
        jPnlConsultar = new javax.swing.JPanel();
        jLblBuscar = new javax.swing.JLabel();
        jChcId = new javax.swing.JCheckBox();
        jChcNombre = new javax.swing.JCheckBox();
        jChcApellidoPaterno = new javax.swing.JCheckBox();
        jTxtId = new javax.swing.JTextField();
        jTxtNombre = new javax.swing.JTextField();
        jTxtApellidoPaterno = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTblCliente = new javax.swing.JTable();
        jBtnBuscar = new javax.swing.JButton();
        jLblSaldo = new javax.swing.JLabel();
        jLblPorSaldo = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPnlConsultar.setBackground(new java.awt.Color(0, 51, 51));
        jPnlConsultar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Consultar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N

        jLblBuscar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLblBuscar.setForeground(new java.awt.Color(255, 255, 255));
        jLblBuscar.setText("Buscar");

        jChcId.setBackground(new java.awt.Color(0, 51, 51));
        jBtgConsultar.add(jChcId);
        jChcId.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jChcId.setForeground(new java.awt.Color(255, 255, 255));
        jChcId.setText("ID");
        jChcId.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jChcId.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jChcId.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jChcIdMouseClicked(evt);
            }
        });
        jChcId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jChcIdActionPerformed(evt);
            }
        });

        jChcNombre.setBackground(new java.awt.Color(0, 51, 51));
        jBtgConsultar.add(jChcNombre);
        jChcNombre.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jChcNombre.setForeground(new java.awt.Color(255, 255, 255));
        jChcNombre.setText("Nombre");
        jChcNombre.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jChcNombre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jChcNombreMouseClicked(evt);
            }
        });

        jChcApellidoPaterno.setBackground(new java.awt.Color(0, 51, 51));
        jBtgConsultar.add(jChcApellidoPaterno);
        jChcApellidoPaterno.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jChcApellidoPaterno.setForeground(new java.awt.Color(255, 255, 255));
        jChcApellidoPaterno.setText("Apellido Paterno");
        jChcApellidoPaterno.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jChcApellidoPaterno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jChcApellidoPaternoMouseClicked(evt);
            }
        });

        jTxtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtIdActionPerformed(evt);
            }
        });
        jTxtId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxtIdKeyTyped(evt);
            }
        });

        jTxtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxtNombreKeyTyped(evt);
            }
        });

        jTxtApellidoPaterno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxtApellidoPaternoKeyTyped(evt);
            }
        });

        jTblCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Apellido Paterno", "Apellido Materno", "Edad", "Curp"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTblCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTblClienteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTblCliente);

        jBtnBuscar.setBackground(new java.awt.Color(0, 51, 51));
        jBtnBuscar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jBtnBuscar.setForeground(new java.awt.Color(0, 51, 51));
        jBtnBuscar.setText("Buscar");
        jBtnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnBuscarActionPerformed(evt);
            }
        });

        jLblSaldo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLblSaldo.setForeground(new java.awt.Color(255, 255, 255));
        jLblSaldo.setText("Saldo:");

        jLblPorSaldo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLblPorSaldo.setForeground(new java.awt.Color(255, 255, 255));
        jLblPorSaldo.setToolTipText("");

        javax.swing.GroupLayout jPnlConsultarLayout = new javax.swing.GroupLayout(jPnlConsultar);
        jPnlConsultar.setLayout(jPnlConsultarLayout);
        jPnlConsultarLayout.setHorizontalGroup(
            jPnlConsultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlConsultarLayout.createSequentialGroup()
                .addGroup(jPnlConsultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPnlConsultarLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPnlConsultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPnlConsultarLayout.createSequentialGroup()
                                .addGroup(jPnlConsultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPnlConsultarLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jChcId, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTxtId, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPnlConsultarLayout.createSequentialGroup()
                                        .addGroup(jPnlConsultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jChcNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jChcApellidoPaterno))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPnlConsultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTxtNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                                            .addComponent(jTxtApellidoPaterno))))
                                .addGap(160, 160, 160))
                            .addGroup(jPnlConsultarLayout.createSequentialGroup()
                                .addGap(190, 190, 190)
                                .addComponent(jLblBuscar))))
                    .addGroup(jPnlConsultarLayout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(jLblSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLblPorSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPnlConsultarLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jBtnBuscar)
                .addGap(203, 203, 203))
        );
        jPnlConsultarLayout.setVerticalGroup(
            jPnlConsultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlConsultarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLblBuscar)
                .addGap(27, 27, 27)
                .addGroup(jPnlConsultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jChcId)
                    .addComponent(jTxtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPnlConsultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jChcNombre)
                    .addComponent(jTxtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPnlConsultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jChcApellidoPaterno)
                    .addComponent(jTxtApellidoPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(jBtnBuscar)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPnlConsultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLblSaldo)
                    .addComponent(jLblPorSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jMenu1.setText("Opciones");

        jMenuItem1.setText("Ir a menu");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPnlConsultar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPnlConsultar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
       Menu verFormulario = new Menu();
        verFormulario.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jBtnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnBuscarActionPerformed
                         
                 
        try
        { 
          String sql;
          if (jChcId.isSelected()) //si está seleccionado se busca por ID  
          {
              pst=conexion.prepareStatement("select idUsuarios,nombre,apellido_paterno,apellido_materno,edad,curp from Usuarios where idUsuarios = ? ");
              pst.setString(1,jTxtId.getText().trim());
              saldo = jTxtId.getText();
              
                sql = "SELECT SUM(cantidad) FROM `Movimientos`WHERE idUsuarios = "+saldo+"";
                pst=conexion.prepareStatement(sql);
                consulta=pst.executeQuery();

                if(consulta.next()){
                 jLblPorSaldo.setText("$"+Integer.toString(consulta.getInt(1)));
                 }
                
            pst=conexion.prepareStatement("select idUsuarios,nombre,apellido_paterno,apellido_materno,edad,curp from Usuarios where idUsuarios = ? ");
            pst.setString(1,jTxtId.getText().trim());
              
          }
          if (jChcNombre.isSelected()) //si está seleccionado se busca por Nombre
          {   
             pst=conexion.prepareStatement("select idUsuarios,nombre,apellido_paterno,apellido_materno,edad,curp from Usuarios where nombre = '"+jTxtNombre.getText()+"'");
             
            consulta=pst.executeQuery();
            int id = 0;
              if(consulta.next())
              {
                  id = consulta.getInt(1);
              }
              sql = "SELECT SUM(cantidad) FROM `Movimientos`WHERE idUsuarios = "+id+"";
                pst=conexion.prepareStatement(sql);
                consulta=pst.executeQuery();

                if(consulta.next())
                {
                 jLblPorSaldo.setText("$"+Integer.toString(consulta.getInt(1)));
                }
            pst=conexion.prepareStatement("select idUsuarios,nombre,apellido_paterno,apellido_materno,edad,curp from Usuarios where nombre = '"+jTxtNombre.getText()+"'");
          }
          if (jChcApellidoPaterno.isSelected()) //si está seleccionado se busca por Apellido Paterno
          { 
              
             pst=conexion.prepareStatement("select idUsuarios,nombre,apellido_paterno,apellido_materno,edad,curp from Usuarios where apellido_paterno = '"+jTxtApellidoPaterno.getText()+"'");
             
            consulta=pst.executeQuery();
            int ap = 0;
              if(consulta.next())
              {
                  ap = consulta.getInt(1);
              }
              sql = "SELECT SUM(cantidad) FROM `Movimientos`WHERE idUsuarios = "+ap+"";
                pst=conexion.prepareStatement(sql);
                consulta=pst.executeQuery();
              
                if(consulta.next())
                {
                 jLblPorSaldo.setText("$"+Integer.toString(consulta.getInt(1)));
                }
                
                pst=conexion.prepareStatement("select idUsuarios,nombre,apellido_paterno,apellido_materno,edad,curp from Usuarios where apellido_paterno = '"+jTxtApellidoPaterno.getText()+"'");
          }
             
          consulta=pst.executeQuery(); //se ejecuta la consulta a la B.D.
          
          ResultSetMetaData metaDatos = consulta.getMetaData();
          //se obtiene una instancia de los metadatos de la consulta para conocer el número de columnas y el nombre de las mismas
          int numeroColumnas=metaDatos.getColumnCount();
          //se asigna el número de las columnas
          
          Object[] etiquetas = new Object[numeroColumnas];
          //declaración de un arreglo de objetos donde se almacenarán los nombres de las columnas
          for (int i =0; i< numeroColumnas; i++)
              etiquetas[i]=metaDatos.getColumnLabel(i+1); 
              //asignación de cada uno de los nombres dentro del arreglo de objetos
              
          modelo.setColumnIdentifiers(etiquetas);  
          //se establece en el modelo de la tabla los nombres de las etiquetas
          
          while (consulta.next()) //evaluación para moverse dentro los registros de la consulta
          {
              Object[] datosFila = new Object[modelo.getColumnCount()];
              //se declara y crea el arreglo de objetos donde se guardarán los datos correspondientes a la consulta
              for (int i =0; i<modelo.getColumnCount();i++)
                  datosFila[i]=consulta.getObject(i+1);
              modelo.addRow(datosFila); //se agrega la fila con la información al modelo
              
              jTblCliente.setModel(modelo);
              //se asocia a la tabla alumnos el modelo de datos llenado anteriormente
          }
          //se limpian contenidos de los criterios y se inhabilitan los componentes
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, e.toString());  
        }
    }//GEN-LAST:event_jBtnBuscarActionPerformed

    private void jTblClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblClienteMouseClicked
     if(jTblCliente.getSelectedRow()!= -1)//se verifica que se haya seleccionado una columna de la tabla
        {
            
            String codigo = String.valueOf(jTblCliente.getValueAt(jTblCliente.getSelectedRow(),0));
            //se obtiene la matricula del alumno según la fila de la tabla que se haya seleccionado
            try
            {
                pst=conexion.prepareStatement("select * from Usuarios where idUsuarios = ? "); //se crea el Statement que permitirá hacer la consulta
                pst.setString(1,codigo);
                consulta=pst.executeQuery();
                //se obtiene el registro del alumno
                while (consulta.next())
                {
                    jTxtId.setText(consulta.getString(1));//se asigna el valor de la matricula
                    jTxtNombre.setText(consulta.getString(1));//se asigna el valor del apellido paterno y nombre
                    jTxtApellidoPaterno.setText(consulta.getString(1));                   
    
                
                }
                bandera=false;//cambio de valor de la variable para que se pueda hacer la modificación del registro
                jTxtId.setEnabled(false);//se deshabilita la matricula para poder hacer la consulta
            }
            catch(SQLException e)
            {
               JOptionPane.showMessageDialog(null, e.toString());  
            }
       }
    }//GEN-LAST:event_jTblClienteMouseClicked

    private void jTxtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtNombreKeyTyped
  char letra = evt.getKeyChar();
        if (Character.isLetter(letra)||evt.getKeyChar()==KeyEvent.VK_BACK_SPACE||evt.getKeyChar()==KeyEvent.VK_SPACE) {
            
        }else{
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_jTxtNombreKeyTyped

    private void jChcIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChcIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jChcIdActionPerformed

    private void jChcIdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jChcIdMouseClicked
        // TODO add your handling code here:
        jTxtId.setEnabled(true);
        jTxtNombre.setEnabled(false);
        jTxtApellidoPaterno.setEnabled(false);
        
        jTxtNombre.setText(null);
        jTxtApellidoPaterno.setText(null);
    }//GEN-LAST:event_jChcIdMouseClicked

    private void jTxtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTxtIdActionPerformed

    private void jChcNombreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jChcNombreMouseClicked
       jTxtNombre.setEnabled(true);
       jTxtId.setEnabled(false);
       jTxtApellidoPaterno.setEnabled(false);
       
       jTxtId.setText(null);
       jTxtApellidoPaterno.setText(null);
    }//GEN-LAST:event_jChcNombreMouseClicked

    private void jChcApellidoPaternoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jChcApellidoPaternoMouseClicked
        // TODO add your handling code here:
         jTxtApellidoPaterno.setEnabled(true);
         jTxtId.setEnabled(false);
         jTxtNombre.setEnabled(false);
         
         jTxtNombre.setText(null);
         jTxtId.setText(null);
    }//GEN-LAST:event_jChcApellidoPaternoMouseClicked

    private void jTxtApellidoPaternoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtApellidoPaternoKeyTyped
        char letra = evt.getKeyChar();
        if (Character.isLetter(letra)||evt.getKeyChar()==KeyEvent.VK_BACK_SPACE||evt.getKeyChar()==KeyEvent.VK_SPACE) {
            
        }else{
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_jTxtApellidoPaternoKeyTyped

    private void jTxtIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtIdKeyTyped
        char c = evt.getKeyChar();
        
        if(c<'0' || c>'9')evt.consume();
    }//GEN-LAST:event_jTxtIdKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Consultar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Consultar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Consultar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Consultar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Consultar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup jBtgConsultar;
    private javax.swing.JButton jBtnBuscar;
    private javax.swing.JCheckBox jChcApellidoPaterno;
    private javax.swing.JCheckBox jChcId;
    private javax.swing.JCheckBox jChcNombre;
    private javax.swing.JLabel jLblBuscar;
    private javax.swing.JLabel jLblPorSaldo;
    private javax.swing.JLabel jLblSaldo;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPnlConsultar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTblCliente;
    private javax.swing.JTextField jTxtApellidoPaterno;
    private javax.swing.JTextField jTxtId;
    private javax.swing.JTextField jTxtNombre;
    // End of variables declaration//GEN-END:variables
}
